// <auto-generated />
using System;
using FastFrame.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FastFrame.Database.Migrations
{
    [DbContext(typeof(DataBase))]
    partial class DataBaseModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("FastFrame.Entity.Basis.Dept", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnName("createtime");

                    b.Property<string>("Create_User_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("create_user_id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<string>("EnCode")
                        .IsRequired()
                        .HasColumnName("encode")
                        .HasMaxLength(50)
                        .IsUnicode(true);

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("isdeleted");

                    b.Property<DateTime>("ModifyTime")
                        .HasColumnName("modifytime");

                    b.Property<string>("Modify_User_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("modify_user_id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(50)
                        .IsUnicode(true);

                    b.Property<string>("Parent_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("parent_id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<string>("Supervisor_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("supervisor_id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<string>("Tenant_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("tenant_id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.HasKey("Id");

                    b.HasIndex("Tenant_Id")
                        .HasName("Index_OrganizeId");

                    b.ToTable("basis_dept");
                });

            modelBuilder.Entity("FastFrame.Entity.Basis.Employee", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnName("createtime");

                    b.Property<string>("Create_User_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("create_user_id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<string>("Dept_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dept_id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasMaxLength(50)
                        .IsUnicode(true);

                    b.Property<string>("EnCode")
                        .IsRequired()
                        .HasColumnName("encode")
                        .HasMaxLength(20)
                        .IsUnicode(true);

                    b.Property<string>("Gender")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("gender")
                        .HasMaxLength(100)
                        .HasDefaultValue("Man");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("isdeleted");

                    b.Property<DateTime>("ModifyTime")
                        .HasColumnName("modifytime");

                    b.Property<string>("Modify_User_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("modify_user_id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(20)
                        .IsUnicode(true);

                    b.Property<string>("PhoneNumber")
                        .HasColumnName("phonenumber")
                        .HasMaxLength(20)
                        .IsUnicode(true);

                    b.Property<string>("Tenant_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("tenant_id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<string>("User_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("user_id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.HasKey("Id");

                    b.HasIndex("Tenant_Id")
                        .HasName("Index_OrganizeId");

                    b.ToTable("basis_employee");
                });

            modelBuilder.Entity("FastFrame.Entity.Basis.Meidia", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<string>("ContentType")
                        .HasColumnName("contenttype")
                        .HasMaxLength(50)
                        .IsUnicode(true);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnName("createtime");

                    b.Property<string>("Create_User_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("create_user_id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<string>("Href")
                        .HasColumnName("href")
                        .HasMaxLength(200)
                        .IsUnicode(true);

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("isdeleted");

                    b.Property<bool>("IsFolder")
                        .HasColumnName("isfolder");

                    b.Property<DateTime>("ModifyTime")
                        .HasColumnName("modifytime");

                    b.Property<string>("Modify_User_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("modify_user_id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(50)
                        .IsUnicode(true);

                    b.Property<string>("Parent_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("parent_id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<string>("Resource_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("resource_id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<string>("Tenant_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("tenant_id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.HasKey("Id");

                    b.HasIndex("Tenant_Id")
                        .HasName("Index_OrganizeId");

                    b.ToTable("basis_meidia");
                });

            modelBuilder.Entity("FastFrame.Entity.Basis.NotifyTarget", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<bool>("HaveRead")
                        .HasColumnName("haveread");

                    b.Property<string>("Notify_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("notify_id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<string>("To_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("to_id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.HasKey("Id");

                    b.ToTable("basis_notifytarget");
                });

            modelBuilder.Entity("FastFrame.Entity.Basis.Permission", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<string>("AreaName")
                        .IsRequired()
                        .HasColumnName("areaname")
                        .HasMaxLength(50)
                        .IsUnicode(true);

                    b.Property<string>("EnCode")
                        .IsRequired()
                        .HasColumnName("encode")
                        .HasMaxLength(50)
                        .IsUnicode(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(50)
                        .IsUnicode(true);

                    b.Property<string>("Parent_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("parent_id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<string>("Tenant_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("tenant_id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.HasKey("Id");

                    b.HasIndex("Tenant_Id")
                        .HasName("Index_OrganizeId");

                    b.ToTable("basis_permission");
                });

            modelBuilder.Entity("FastFrame.Entity.Basis.Resource", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<string>("ContentType")
                        .HasColumnName("contenttype")
                        .HasMaxLength(50)
                        .IsUnicode(true);

                    b.Property<string>("MD5")
                        .HasColumnName("md5")
                        .HasMaxLength(200)
                        .IsUnicode(true);

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(150)
                        .IsUnicode(true);

                    b.Property<string>("Path")
                        .HasColumnName("path")
                        .HasMaxLength(150)
                        .IsUnicode(true);

                    b.Property<long>("Size")
                        .HasColumnName("size");

                    b.Property<string>("Tenant_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("tenant_id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.HasKey("Id");

                    b.HasIndex("Tenant_Id")
                        .HasName("Index_OrganizeId");

                    b.ToTable("basis_resource");
                });

            modelBuilder.Entity("FastFrame.Entity.Basis.Role", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnName("createtime");

                    b.Property<string>("Create_User_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("create_user_id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<string>("EnCode")
                        .IsRequired()
                        .HasColumnName("encode")
                        .HasMaxLength(50)
                        .IsUnicode(true);

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("isdeleted");

                    b.Property<DateTime>("ModifyTime")
                        .HasColumnName("modifytime");

                    b.Property<string>("Modify_User_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("modify_user_id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(50)
                        .IsUnicode(true);

                    b.Property<string>("Tenant_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("tenant_id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.HasKey("Id");

                    b.HasIndex("Tenant_Id")
                        .HasName("Index_OrganizeId");

                    b.ToTable("basis_role");
                });

            modelBuilder.Entity("FastFrame.Entity.Basis.RoleMember", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnName("createtime");

                    b.Property<string>("Create_User_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("create_user_id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("isdeleted");

                    b.Property<DateTime>("ModifyTime")
                        .HasColumnName("modifytime");

                    b.Property<string>("Modify_User_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("modify_user_id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<string>("Role_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("role_id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<string>("Tenant_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("tenant_id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<string>("User_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("user_id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.HasKey("Id");

                    b.HasIndex("Tenant_Id")
                        .HasName("Index_OrganizeId");

                    b.ToTable("basis_rolemember");
                });

            modelBuilder.Entity("FastFrame.Entity.Basis.RolePermission", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnName("createtime");

                    b.Property<string>("Create_User_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("create_user_id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("isdeleted");

                    b.Property<DateTime>("ModifyTime")
                        .HasColumnName("modifytime");

                    b.Property<string>("Modify_User_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("modify_user_id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<string>("Permission_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("permission_id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<string>("Role_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("role_id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<string>("Tenant_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("tenant_id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.HasKey("Id");

                    b.HasIndex("Tenant_Id")
                        .HasName("Index_OrganizeId");

                    b.ToTable("basis_rolepermission");
                });

            modelBuilder.Entity("FastFrame.Entity.Basis.Tenant", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<bool>("CanHaveChildren")
                        .HasColumnName("canhavechildren");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnName("fullname")
                        .HasMaxLength(50)
                        .IsUnicode(true);

                    b.Property<string>("HandIcon_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("handicon_id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("isdeleted");

                    b.Property<string>("Parent_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("parent_id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnName("shortname")
                        .HasMaxLength(50)
                        .IsUnicode(true);

                    b.Property<string>("UrlMark")
                        .HasColumnName("urlmark")
                        .HasMaxLength(50)
                        .IsUnicode(true);

                    b.HasKey("Id");

                    b.ToTable("basis_tenant");

                    b.HasData(
                        new
                        {
                            Id = "00F6P5G2VC2SAP1UJV7HTBYGU",
                            CanHaveChildren = true,
                            FullName = "默认组织",
                            IsDeleted = false,
                            Parent_Id = "",
                            ShortName = "default",
                            UrlMark = ""
                        });
                });

            modelBuilder.Entity("FastFrame.Entity.Basis.TenantHost", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<string>("Host")
                        .IsRequired()
                        .HasColumnName("host")
                        .HasMaxLength(200)
                        .IsUnicode(true);

                    b.Property<string>("Tenant_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("tenant_id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.HasKey("Id");

                    b.HasIndex("Tenant_Id")
                        .HasName("Index_OrganizeId");

                    b.ToTable("basis_tenanthost");

                    b.HasData(
                        new
                        {
                            Id = "00F6P5G2VC2SAP1UJV7HTBYGB",
                            Host = "192.168.1.100:8081",
                            Tenant_Id = "00F6P5G2VC2SAP1UJV7HTBYGU"
                        },
                        new
                        {
                            Id = "00F6P5G2VC2SAP1UJV7HTBYGc",
                            Host = "192.168.1.100:82",
                            Tenant_Id = "00F6P5G2VC2SAP1UJV7HTBYGU"
                        });
                });

            modelBuilder.Entity("FastFrame.Entity.Basis.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasColumnName("account")
                        .HasMaxLength(50)
                        .IsUnicode(true);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnName("createtime");

                    b.Property<string>("Create_User_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("create_user_id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasMaxLength(50)
                        .IsUnicode(true);

                    b.Property<string>("EncryptionKey")
                        .IsRequired()
                        .HasColumnName("encryptionkey")
                        .HasMaxLength(36)
                        .IsUnicode(true);

                    b.Property<string>("HandIcon_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("handicon_id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<bool>("IsAdmin")
                        .HasColumnName("isadmin");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("isdeleted");

                    b.Property<bool>("IsDisabled")
                        .HasColumnName("isdisabled");

                    b.Property<bool>("IsRoot")
                        .HasColumnName("isroot");

                    b.Property<DateTime>("ModifyTime")
                        .HasColumnName("modifytime");

                    b.Property<string>("Modify_User_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("modify_user_id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(50)
                        .IsUnicode(true);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("password")
                        .HasMaxLength(50)
                        .IsUnicode(true);

                    b.Property<string>("PhoneNumber")
                        .HasColumnName("phonenumber")
                        .HasMaxLength(20)
                        .IsUnicode(true);

                    b.Property<string>("Tenant_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("tenant_id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.HasKey("Id");

                    b.HasIndex("Tenant_Id")
                        .HasName("Index_OrganizeId");

                    b.ToTable("basis_user");

                    b.HasData(
                        new
                        {
                            Id = "00F6P5G2VC2SAP1UJV7HTBYGA",
                            Account = "admin",
                            CreateTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "gongjie@qq.com",
                            EncryptionKey = "0796597ef9ab8e60e8de8f747358f38b",
                            IsAdmin = true,
                            IsDeleted = false,
                            IsDisabled = false,
                            IsRoot = true,
                            ModifyTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "超级管理员",
                            Password = "5bd0f30d0fb4d72e595070db5021628f",
                            PhoneNumber = "18675517757",
                            Tenant_Id = "00F6P5G2VC2SAP1UJV7HTBYGU"
                        });
                });

            modelBuilder.Entity("FastFrame.Entity.Chat.Email", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<string>("FromUser_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("fromuser_id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<string>("Replay_Email_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("replay_email_id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<string>("Tenant_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("tenant_id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnName("title")
                        .HasMaxLength(50)
                        .IsUnicode(true);

                    b.HasKey("Id");

                    b.HasIndex("Tenant_Id")
                        .HasName("Index_OrganizeId");

                    b.ToTable("chat_email");
                });

            modelBuilder.Entity("FastFrame.Entity.Chat.EmailAnnex", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<string>("Email_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("email_id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<string>("Resource_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("resource_id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.HasKey("Id");

                    b.ToTable("chat_emailannex");
                });

            modelBuilder.Entity("FastFrame.Entity.Chat.EmailContent", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<string>("Content")
                        .HasColumnName("content")
                        .IsUnicode(true);

                    b.Property<string>("Email_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("email_id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.HasKey("Id");

                    b.ToTable("chat_emailcontent");
                });

            modelBuilder.Entity("FastFrame.Entity.Chat.EmailTarget", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<string>("Category")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("category")
                        .HasMaxLength(100)
                        .HasDefaultValue("To");

                    b.Property<string>("Email_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("email_id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<bool>("HaveRead")
                        .HasColumnName("haveread");

                    b.Property<string>("To_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("to_id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.HasKey("Id");

                    b.ToTable("chat_emailtarget");
                });

            modelBuilder.Entity("FastFrame.Entity.Chat.FriendMessage", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<string>("Category")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("category")
                        .HasMaxLength(100)
                        .HasDefaultValue("Text");

                    b.Property<string>("Content")
                        .HasColumnName("content")
                        .HasMaxLength(500)
                        .IsUnicode(true);

                    b.Property<string>("From_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("from_id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<DateTime>("MessageTime")
                        .HasColumnName("messagetime");

                    b.Property<string>("Resource_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("resource_id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<string>("Tenant_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("tenant_id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.HasKey("Id");

                    b.HasIndex("Tenant_Id")
                        .HasName("Index_OrganizeId");

                    b.ToTable("chat_friendmessage");
                });

            modelBuilder.Entity("FastFrame.Entity.Chat.Group", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnName("createtime");

                    b.Property<string>("Create_User_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("create_user_id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<string>("HandIcon_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("handicon_id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("isdeleted");

                    b.Property<string>("LordUser_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("lorduser_id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<DateTime>("ModifyTime")
                        .HasColumnName("modifytime");

                    b.Property<string>("Modify_User_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("modify_user_id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(50)
                        .IsUnicode(true);

                    b.Property<string>("Summary")
                        .HasColumnName("summary")
                        .HasMaxLength(200)
                        .IsUnicode(true);

                    b.Property<string>("Tenant_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("tenant_id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.HasKey("Id");

                    b.HasIndex("Tenant_Id")
                        .HasName("Index_OrganizeId");

                    b.ToTable("chat_group");
                });

            modelBuilder.Entity("FastFrame.Entity.Chat.GroupManager", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<string>("Group_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("group_id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<string>("User_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("user_id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.HasKey("Id");

                    b.ToTable("chat_groupmanager");
                });

            modelBuilder.Entity("FastFrame.Entity.Chat.GroupMessage", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<string>("Category")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("category")
                        .HasMaxLength(100)
                        .HasDefaultValue("Text");

                    b.Property<string>("Content")
                        .HasColumnName("content")
                        .HasMaxLength(500)
                        .IsUnicode(true);

                    b.Property<string>("From_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("from_id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<string>("Group_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("group_id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<DateTime>("MessageTime")
                        .HasColumnName("messagetime");

                    b.Property<string>("Resource_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("resource_id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<string>("Tenant_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("tenant_id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.HasKey("Id");

                    b.HasIndex("Tenant_Id")
                        .HasName("Index_OrganizeId");

                    b.ToTable("chat_groupmessage");
                });

            modelBuilder.Entity("FastFrame.Entity.Chat.MessageTarget", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<bool>("HaveRead")
                        .HasColumnName("haveread");

                    b.Property<string>("Message_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("message_id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<string>("To_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("to_id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.HasKey("Id");

                    b.ToTable("chat_messagetarget");
                });

            modelBuilder.Entity("FastFrame.Entity.Chat.Notify", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnName("content")
                        .IsUnicode(true);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnName("createtime");

                    b.Property<string>("Create_User_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("create_user_id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("isdeleted");

                    b.Property<DateTime>("ModifyTime")
                        .HasColumnName("modifytime");

                    b.Property<string>("Modify_User_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("modify_user_id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<string>("Publush_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("publush_id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<string>("Tenant_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("tenant_id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasDefaultValue("");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnName("title")
                        .HasMaxLength(50)
                        .IsUnicode(true);

                    b.HasKey("Id");

                    b.HasIndex("Tenant_Id")
                        .HasName("Index_OrganizeId");

                    b.ToTable("chat_notify");
                });
#pragma warning restore 612, 618
        }
    }
}
