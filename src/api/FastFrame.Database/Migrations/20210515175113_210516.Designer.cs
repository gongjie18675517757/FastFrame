// <auto-generated />
using System;
using FastFrame.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FastFrame.Database.Migrations
{
    [DbContext(typeof(DataBase))]
    [Migration("20210515175113_210516")]
    partial class _210516
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.6");

            modelBuilder.Entity("FastFrame.Entity.Basis.Dept", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("id")
                        .HasComment("主键");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("createtime")
                        .HasComment("创建时间");

                    b.Property<string>("Create_User_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("create_user_id")
                        .HasComment("创建人");

                    b.Property<string>("EnCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("encode")
                        .HasComment("编码");

                    b.Property<DateTime>("ModifyTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("modifytime")
                        .HasComment("修改时间");

                    b.Property<string>("Modify_User_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("modify_user_id")
                        .HasComment("修改人");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name")
                        .HasComment("名称");

                    b.Property<string>("Super_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("super_id")
                        .HasComment("上级");

                    b.Property<bool>("isdeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("tenant_id")
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.HasKey("Id");

                    b.HasIndex("Create_User_Id")
                        .HasDatabaseName("Index_Dept_Create_User_Id");

                    b.HasIndex("Modify_User_Id")
                        .HasDatabaseName("Index_Dept_Modify_User_Id");

                    b.HasIndex("Super_Id")
                        .HasDatabaseName("Index_Dept_Super_Id");

                    b.HasIndex("isdeleted")
                        .HasDatabaseName("Index_Dept_isdeleted");

                    b.HasIndex("tenant_id")
                        .HasDatabaseName("Index_Dept_tenant_id");

                    b.ToTable("basis_dept");

                    b
                        .HasComment("部门");
                });

            modelBuilder.Entity("FastFrame.Entity.Basis.DeptMember", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("id")
                        .HasComment("");

                    b.Property<string>("Dept_Id")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("dept_id")
                        .HasComment("部门");

                    b.Property<bool>("IsManager")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("ismanager")
                        .HasComment("是否管理员");

                    b.Property<string>("User_Id")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("user_id")
                        .HasComment("用户");

                    b.HasKey("Id");

                    b.HasIndex("Dept_Id")
                        .HasDatabaseName("Index_DeptMember_Dept_Id");

                    b.HasIndex("User_Id")
                        .HasDatabaseName("Index_DeptMember_User_Id");

                    b.ToTable("basis_deptmember");

                    b
                        .HasComment("部门成员");
                });

            modelBuilder.Entity("FastFrame.Entity.Basis.EnumItem", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("id")
                        .HasComment("主键");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("createtime")
                        .HasComment("创建时间");

                    b.Property<string>("Create_User_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("create_user_id")
                        .HasComment("创建人");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("key")
                        .HasComment("键");

                    b.Property<DateTime>("ModifyTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("modifytime")
                        .HasComment("修改时间");

                    b.Property<string>("Modify_User_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("modify_user_id")
                        .HasComment("修改人");

                    b.Property<string>("Super_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("super_id")
                        .HasComment("上级");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(true)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("value")
                        .HasComment("值");

                    b.Property<bool>("isdeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("tenant_id")
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.HasKey("Id");

                    b.HasIndex("Create_User_Id")
                        .HasDatabaseName("Index_EnumItem_Create_User_Id");

                    b.HasIndex("Modify_User_Id")
                        .HasDatabaseName("Index_EnumItem_Modify_User_Id");

                    b.HasIndex("Super_Id")
                        .HasDatabaseName("Index_EnumItem_Super_Id");

                    b.HasIndex("isdeleted")
                        .HasDatabaseName("Index_EnumItem_isdeleted");

                    b.HasIndex("tenant_id")
                        .HasDatabaseName("Index_EnumItem_tenant_id");

                    b.ToTable("basis_enumitem");

                    b
                        .HasComment("数字字典");
                });

            modelBuilder.Entity("FastFrame.Entity.Basis.LoginLog", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("id")
                        .HasComment("");

                    b.Property<DateTime>("ExpiredTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("expiredtime")
                        .HasComment("过期时间");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("isenabled")
                        .HasComment("是否有效");

                    b.Property<DateTime>("LastTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("lasttime")
                        .HasComment("最后刷新时间");

                    b.Property<DateTime>("LoginTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("logintime")
                        .HasComment("登陆时间");

                    b.Property<string>("User_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("user_id")
                        .HasComment("关联：User");

                    b.Property<string>("tenant_id")
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.HasKey("Id");

                    b.HasIndex("User_Id")
                        .HasDatabaseName("Index_LoginLog_User_Id");

                    b.HasIndex("tenant_id")
                        .HasDatabaseName("Index_LoginLog_tenant_id");

                    b.ToTable("basis_loginlog");

                    b
                        .HasComment("登陆Log");
                });

            modelBuilder.Entity("FastFrame.Entity.Basis.Meidia", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("id")
                        .HasComment("主键");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("createtime")
                        .HasComment("创建时间");

                    b.Property<string>("Create_User_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("create_user_id")
                        .HasComment("创建人");

                    b.Property<bool>("IsFolder")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("isfolder")
                        .HasComment("是否文件夹");

                    b.Property<DateTime>("ModifyTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("modifytime")
                        .HasComment("修改时间");

                    b.Property<string>("Modify_User_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("modify_user_id")
                        .HasComment("修改人");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name")
                        .HasComment("名称");

                    b.Property<string>("Resource_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("resource_id")
                        .HasComment("资源");

                    b.Property<string>("Super_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("super_id")
                        .HasComment("上级");

                    b.Property<bool>("isdeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("tenant_id")
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.HasKey("Id");

                    b.HasIndex("Create_User_Id")
                        .HasDatabaseName("Index_Meidia_Create_User_Id");

                    b.HasIndex("Modify_User_Id")
                        .HasDatabaseName("Index_Meidia_Modify_User_Id");

                    b.HasIndex("Resource_Id")
                        .HasDatabaseName("Index_Meidia_Resource_Id");

                    b.HasIndex("Super_Id")
                        .HasDatabaseName("Index_Meidia_Super_Id");

                    b.HasIndex("isdeleted")
                        .HasDatabaseName("Index_Meidia_isdeleted");

                    b.HasIndex("tenant_id")
                        .HasDatabaseName("Index_Meidia_tenant_id");

                    b.ToTable("basis_meidia");

                    b
                        .HasComment("图片库");
                });

            modelBuilder.Entity("FastFrame.Entity.Basis.Notify", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("id")
                        .HasComment("主键");

                    b.Property<string>("Content")
                        .IsRequired()
                        .IsUnicode(true)
                        .HasColumnType("longtext")
                        .HasColumnName("content")
                        .HasComment("内容");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("createtime")
                        .HasComment("创建时间");

                    b.Property<string>("Create_User_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("create_user_id")
                        .HasComment("创建人");

                    b.Property<DateTime>("ModifyTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("modifytime")
                        .HasComment("修改时间");

                    b.Property<string>("Modify_User_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("modify_user_id")
                        .HasComment("修改人");

                    b.Property<string>("Publush_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("publush_id")
                        .HasComment("发布人");

                    b.Property<string>("Resource_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("resource_id")
                        .HasComment("附件");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("title")
                        .HasComment("标题");

                    b.Property<string>("Type_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("type_id")
                        .HasComment("类型");

                    b.Property<bool>("isdeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("tenant_id")
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.HasKey("Id");

                    b.HasIndex("Create_User_Id")
                        .HasDatabaseName("Index_Notify_Create_User_Id");

                    b.HasIndex("Modify_User_Id")
                        .HasDatabaseName("Index_Notify_Modify_User_Id");

                    b.HasIndex("Publush_Id")
                        .HasDatabaseName("Index_Notify_Publush_Id");

                    b.HasIndex("Resource_Id")
                        .HasDatabaseName("Index_Notify_Resource_Id");

                    b.HasIndex("Type_Id")
                        .HasDatabaseName("Index_Notify_Type_Id");

                    b.HasIndex("isdeleted")
                        .HasDatabaseName("Index_Notify_isdeleted");

                    b.HasIndex("tenant_id")
                        .HasDatabaseName("Index_Notify_tenant_id");

                    b.ToTable("basis_notify");

                    b
                        .HasComment("通知");
                });

            modelBuilder.Entity("FastFrame.Entity.Basis.NumberOption", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("id")
                        .HasComment("主键");

                    b.Property<string>("BeModule")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("bemodule")
                        .HasComment("模块名称");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("createtime")
                        .HasComment("创建时间");

                    b.Property<string>("Create_User_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("create_user_id")
                        .HasComment("创建人");

                    b.Property<string>("DateField")
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("datefield")
                        .HasComment("取日期字段");

                    b.Property<string>("DateFieldText")
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("datefieldtext")
                        .HasComment("日期字段名称");

                    b.Property<string>("FmtDate")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("fmtdate")
                        .HasComment("日期格式方法");

                    b.Property<DateTime>("ModifyTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("modifytime")
                        .HasComment("修改时间");

                    b.Property<string>("Modify_User_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("modify_user_id")
                        .HasComment("修改人");

                    b.Property<string>("Prefix")
                        .HasMaxLength(10)
                        .IsUnicode(true)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("prefix")
                        .HasComment("前缀");

                    b.Property<int>("SerialLength")
                        .HasColumnType("int")
                        .HasColumnName("seriallength")
                        .HasComment("流水号长度");

                    b.Property<string>("Suffix")
                        .HasMaxLength(10)
                        .IsUnicode(true)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("suffix")
                        .HasComment("后缀");

                    b.Property<bool>("TaskDate")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("taskdate")
                        .HasComment("是否取日期");

                    b.Property<bool>("isdeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("tenant_id")
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.HasKey("Id");

                    b.HasIndex("Create_User_Id")
                        .HasDatabaseName("Index_NumberOption_Create_User_Id");

                    b.HasIndex("Modify_User_Id")
                        .HasDatabaseName("Index_NumberOption_Modify_User_Id");

                    b.HasIndex("isdeleted")
                        .HasDatabaseName("Index_NumberOption_isdeleted");

                    b.HasIndex("tenant_id")
                        .HasDatabaseName("Index_NumberOption_tenant_id");

                    b.ToTable("basis_numberoption");

                    b
                        .HasComment("编号设置");
                });

            modelBuilder.Entity("FastFrame.Entity.Basis.NumberRecord", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("id")
                        .HasComment("");

                    b.Property<string>("BeModule")
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("bemodule")
                        .HasComment("模块名称");

                    b.Property<int>("Day")
                        .HasColumnType("int")
                        .HasColumnName("day")
                        .HasComment("日");

                    b.Property<int>("Month")
                        .HasColumnType("int")
                        .HasColumnName("month")
                        .HasComment("月");

                    b.Property<int>("PrevSerial")
                        .HasColumnType("int")
                        .HasColumnName("prevserial")
                        .HasComment("上一期流水");

                    b.Property<int>("Serial")
                        .HasColumnType("int")
                        .HasColumnName("serial")
                        .HasComment("流水");

                    b.Property<int>("Year")
                        .HasColumnType("int")
                        .HasColumnName("year")
                        .HasComment("年");

                    b.Property<bool>("isdeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("tenant_id")
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.HasKey("Id");

                    b.HasIndex("isdeleted")
                        .HasDatabaseName("Index_NumberRecord_isdeleted");

                    b.HasIndex("tenant_id")
                        .HasDatabaseName("Index_NumberRecord_tenant_id");

                    b.ToTable("basis_numberrecord");

                    b
                        .HasComment("编号记录");
                });

            modelBuilder.Entity("FastFrame.Entity.Basis.Resource", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("id")
                        .HasComment("");

                    b.Property<string>("ContentType")
                        .HasMaxLength(150)
                        .IsUnicode(true)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("contenttype")
                        .HasComment("资源标识");

                    b.Property<string>("MD5")
                        .IsUnicode(true)
                        .HasColumnType("longtext")
                        .HasColumnName("md5")
                        .HasComment("MD5摘要");

                    b.Property<string>("Name")
                        .HasMaxLength(150)
                        .IsUnicode(true)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("name")
                        .HasComment("资源名称");

                    b.Property<string>("Path")
                        .HasMaxLength(150)
                        .IsUnicode(true)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("path")
                        .HasComment("相对路径");

                    b.Property<long>("Size")
                        .HasColumnType("bigint")
                        .HasColumnName("size")
                        .HasComment("资源大小");

                    b.Property<DateTime>("UploadTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("uploadtime")
                        .HasComment("上传时间");

                    b.Property<string>("Uploader_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("uploader_id")
                        .HasComment("上传人");

                    b.Property<string>("tenant_id")
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.HasKey("Id");

                    b.HasIndex("Uploader_Id")
                        .HasDatabaseName("Index_Resource_Uploader_Id");

                    b.HasIndex("tenant_id")
                        .HasDatabaseName("Index_Resource_tenant_id");

                    b.ToTable("basis_resource");

                    b
                        .HasComment("资源");
                });

            modelBuilder.Entity("FastFrame.Entity.Basis.ResourceMap", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("id")
                        .HasComment("");

                    b.Property<string>("FKey_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("fkey_id")
                        .HasComment("外键");

                    b.Property<string>("File_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("file_id")
                        .HasComment("关联：Resource");

                    b.Property<string>("Key")
                        .HasMaxLength(20)
                        .IsUnicode(true)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("key")
                        .HasComment("标识");

                    b.HasKey("Id");

                    b.HasIndex("FKey_Id")
                        .HasDatabaseName("Index_ResourceMap_FKey_Id");

                    b.HasIndex("File_Id")
                        .HasDatabaseName("Index_ResourceMap_File_Id");

                    b.ToTable("basis_resourcemap");

                    b
                        .HasComment("资源映射");
                });

            modelBuilder.Entity("FastFrame.Entity.Basis.Role", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("id")
                        .HasComment("主键");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("createtime")
                        .HasComment("创建时间");

                    b.Property<string>("Create_User_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("create_user_id")
                        .HasComment("创建人");

                    b.Property<string>("EnCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("encode")
                        .HasComment("编码");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("isadmin")
                        .HasComment("管理员角色");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("isdefault")
                        .HasComment("缺省角色");

                    b.Property<DateTime>("ModifyTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("modifytime")
                        .HasComment("修改时间");

                    b.Property<string>("Modify_User_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("modify_user_id")
                        .HasComment("修改人");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name")
                        .HasComment("名称");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .IsUnicode(true)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("remarks")
                        .HasComment("备注");

                    b.Property<bool>("isdeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("tenant_id")
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.HasKey("Id");

                    b.HasIndex("Create_User_Id")
                        .HasDatabaseName("Index_Role_Create_User_Id");

                    b.HasIndex("Modify_User_Id")
                        .HasDatabaseName("Index_Role_Modify_User_Id");

                    b.HasIndex("isdeleted")
                        .HasDatabaseName("Index_Role_isdeleted");

                    b.HasIndex("tenant_id")
                        .HasDatabaseName("Index_Role_tenant_id");

                    b.ToTable("basis_role");

                    b
                        .HasComment("角色");
                });

            modelBuilder.Entity("FastFrame.Entity.Basis.RoleMember", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("id")
                        .HasComment("");

                    b.Property<string>("Role_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("role_id")
                        .HasComment("角色");

                    b.Property<string>("User_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("user_id")
                        .HasComment("用户");

                    b.HasKey("Id");

                    b.HasIndex("Role_Id")
                        .HasDatabaseName("Index_RoleMember_Role_Id");

                    b.HasIndex("User_Id")
                        .HasDatabaseName("Index_RoleMember_User_Id");

                    b.ToTable("basis_rolemember");

                    b
                        .HasComment("角色成员");
                });

            modelBuilder.Entity("FastFrame.Entity.Basis.RolePermission", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("id")
                        .HasComment("");

                    b.Property<string>("PermissionKey")
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("permissionkey")
                        .HasComment("权限标记");

                    b.Property<string>("Role_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("role_id")
                        .HasComment("角色ID");

                    b.HasKey("Id");

                    b.HasIndex("PermissionKey");

                    b.HasIndex("Role_Id")
                        .HasDatabaseName("Index_RolePermission_Role_Id");

                    b.ToTable("basis_rolepermission");

                    b
                        .HasComment("角色权限");
                });

            modelBuilder.Entity("FastFrame.Entity.Basis.Tenant", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("id")
                        .HasComment("主键");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("fullname")
                        .HasComment("全称");

                    b.Property<string>("HandIcon_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("handicon_id")
                        .HasComment("Logo头像");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("shortname")
                        .HasComment("简称");

                    b.Property<string>("Super_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("super_id")
                        .HasComment("上级");

                    b.Property<string>("Tenant_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("tenant_id")
                        .HasComment("租户标记");

                    b.Property<string>("UrlMark")
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("urlmark")
                        .HasComment("URL标识");

                    b.Property<bool>("isdeleted")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("HandIcon_Id")
                        .HasDatabaseName("Index_Tenant_HandIcon_Id");

                    b.HasIndex("Super_Id")
                        .HasDatabaseName("Index_Tenant_Super_Id");

                    b.HasIndex("Tenant_Id")
                        .HasDatabaseName("Index_Tenant_Tenant_Id");

                    b.HasIndex("isdeleted")
                        .HasDatabaseName("Index_Tenant_isdeleted");

                    b.ToTable("basis_tenant");

                    b
                        .HasComment("组织信息");

                    b.HasData(
                        new
                        {
                            Id = "00fm5yfgzpgp93ylkuxshsc73",
                            FullName = "默认组织",
                            ShortName = "default",
                            UrlMark = "*",
                            isdeleted = false
                        });
                });

            modelBuilder.Entity("FastFrame.Entity.Basis.TenantHost", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("id")
                        .HasComment("主键");

                    b.Property<string>("Host")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(true)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("host")
                        .HasComment("域名");

                    b.Property<string>("Tenant_Id")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("tenant_id")
                        .HasComment("租户");

                    b.HasKey("Id");

                    b.HasIndex("Tenant_Id")
                        .HasDatabaseName("Index_TenantHost_Tenant_Id");

                    b.ToTable("basis_tenanthost");

                    b
                        .HasComment("");
                });

            modelBuilder.Entity("FastFrame.Entity.Basis.User", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("id")
                        .HasComment("主键");

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("account")
                        .HasComment("帐号");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("createtime")
                        .HasComment("创建时间");

                    b.Property<string>("Create_User_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("create_user_id")
                        .HasComment("创建人");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email")
                        .HasComment("邮箱");

                    b.Property<string>("Enable")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("enable")
                        .HasComment("启用状态");

                    b.Property<string>("EncryptionKey")
                        .IsRequired()
                        .HasMaxLength(36)
                        .IsUnicode(true)
                        .HasColumnType("varchar(36)")
                        .HasColumnName("encryptionkey")
                        .HasComment("密钥");

                    b.Property<string>("HandIcon_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("handicon_id")
                        .HasComment("头像");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("isadmin")
                        .HasComment("是否管理员");

                    b.Property<DateTime>("ModifyTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("modifytime")
                        .HasComment("修改时间");

                    b.Property<string>("Modify_User_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("modify_user_id")
                        .HasComment("修改人");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name")
                        .HasComment("姓名");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("password")
                        .HasComment("密码");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .IsUnicode(true)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("phonenumber")
                        .HasComment("手机号码");

                    b.Property<bool>("isdeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("tenant_id")
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.HasKey("Id");

                    b.HasIndex("Create_User_Id")
                        .HasDatabaseName("Index_User_Create_User_Id");

                    b.HasIndex("HandIcon_Id")
                        .HasDatabaseName("Index_User_HandIcon_Id");

                    b.HasIndex("Modify_User_Id")
                        .HasDatabaseName("Index_User_Modify_User_Id");

                    b.HasIndex("isdeleted")
                        .HasDatabaseName("Index_User_isdeleted");

                    b.HasIndex("tenant_id")
                        .HasDatabaseName("Index_User_tenant_id");

                    b.ToTable("basis_user");

                    b
                        .HasComment("用户");

                    b.HasData(
                        new
                        {
                            Id = "00fm5yfgq3q893ylku6uzb57i",
                            Account = "admin",
                            CreateTime = new DateTime(2019, 6, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Create_User_Id = "00fm5yfgq3q893ylku6uzb57i",
                            Email = "gongjie@qq.com",
                            Enable = "enabled",
                            EncryptionKey = "7d9d7edd6727912ce10b976818dd2856",
                            IsAdmin = true,
                            ModifyTime = new DateTime(2019, 6, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Modify_User_Id = "00fm5yfgq3q893ylku6uzb57i",
                            Name = "管理员",
                            Password = "9557847e0632e2f167a143b7ab3d668a",
                            PhoneNumber = "18675517757",
                            isdeleted = false
                        });
                });

            modelBuilder.Entity("FastFrame.Entity.Chat.Email", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("id")
                        .HasComment("主键");

                    b.Property<string>("FromUser_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("fromuser_id")
                        .HasComment("发件人");

                    b.Property<string>("Replay_Email_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("replay_email_id")
                        .HasComment("回复自");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("title")
                        .HasComment("标题");

                    b.Property<string>("tenant_id")
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.HasKey("Id");

                    b.HasIndex("FromUser_Id")
                        .HasDatabaseName("Index_Email_FromUser_Id");

                    b.HasIndex("Replay_Email_Id")
                        .HasDatabaseName("Index_Email_Replay_Email_Id");

                    b.HasIndex("tenant_id")
                        .HasDatabaseName("Index_Email_tenant_id");

                    b.ToTable("chat_email");

                    b
                        .HasComment("邮件");
                });

            modelBuilder.Entity("FastFrame.Entity.Chat.EmailAnnex", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("id")
                        .HasComment("主键");

                    b.Property<string>("Email_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("email_id")
                        .HasComment("邮件ID");

                    b.Property<string>("Resource_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("resource_id")
                        .HasComment("文件ID");

                    b.HasKey("Id");

                    b.HasIndex("Email_Id")
                        .HasDatabaseName("Index_EmailAnnex_Email_Id");

                    b.HasIndex("Resource_Id")
                        .HasDatabaseName("Index_EmailAnnex_Resource_Id");

                    b.ToTable("chat_emailannex");

                    b
                        .HasComment("邮件附件");
                });

            modelBuilder.Entity("FastFrame.Entity.Chat.EmailContent", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("id")
                        .HasComment("主键");

                    b.Property<string>("Content")
                        .IsUnicode(true)
                        .HasColumnType("longtext")
                        .HasColumnName("content")
                        .HasComment("内容");

                    b.Property<string>("Email_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("email_id")
                        .HasComment("邮件ID");

                    b.HasKey("Id");

                    b.HasIndex("Email_Id")
                        .HasDatabaseName("Index_EmailContent_Email_Id");

                    b.ToTable("chat_emailcontent");

                    b
                        .HasComment("邮件正文");
                });

            modelBuilder.Entity("FastFrame.Entity.Chat.EmailTarget", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("id")
                        .HasComment("主键");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("category")
                        .HasComment("类型");

                    b.Property<string>("Email_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("email_id")
                        .HasComment("邮件ID");

                    b.Property<bool>("HaveRead")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("haveread")
                        .HasComment("已读");

                    b.Property<string>("To_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("to_id")
                        .HasComment("接收人");

                    b.HasKey("Id");

                    b.HasIndex("Email_Id")
                        .HasDatabaseName("Index_EmailTarget_Email_Id");

                    b.HasIndex("To_Id")
                        .HasDatabaseName("Index_EmailTarget_To_Id");

                    b.ToTable("chat_emailtarget");

                    b
                        .HasComment("邮件收件人");
                });

            modelBuilder.Entity("FastFrame.Entity.Chat.FriendMessage", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("id")
                        .HasComment("主键");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("category")
                        .HasComment("消息类型");

                    b.Property<string>("Content")
                        .HasMaxLength(500)
                        .IsUnicode(true)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("content")
                        .HasComment("内容");

                    b.Property<string>("From_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("from_id")
                        .HasComment("发送人");

                    b.Property<DateTime>("MessageTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("messagetime")
                        .HasComment("消息时间");

                    b.Property<string>("Resource_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("resource_id")
                        .HasComment("图片?附件ID");

                    b.Property<string>("tenant_id")
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.HasKey("Id");

                    b.HasIndex("From_Id")
                        .HasDatabaseName("Index_FriendMessage_From_Id");

                    b.HasIndex("Resource_Id")
                        .HasDatabaseName("Index_FriendMessage_Resource_Id");

                    b.HasIndex("tenant_id")
                        .HasDatabaseName("Index_FriendMessage_tenant_id");

                    b.ToTable("chat_friendmessage");

                    b
                        .HasComment("好友消息");
                });

            modelBuilder.Entity("FastFrame.Entity.Chat.Group", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("id")
                        .HasComment("主键");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("createtime")
                        .HasComment("创建时间");

                    b.Property<string>("Create_User_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("create_user_id")
                        .HasComment("创建人");

                    b.Property<string>("HandIcon_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("handicon_id")
                        .HasComment("图标");

                    b.Property<string>("LordUser_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("lorduser_id")
                        .HasComment("群主");

                    b.Property<DateTime>("ModifyTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("modifytime")
                        .HasComment("修改时间");

                    b.Property<string>("Modify_User_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("modify_user_id")
                        .HasComment("修改人");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name")
                        .HasComment("群组名称");

                    b.Property<string>("Summary")
                        .HasMaxLength(200)
                        .IsUnicode(true)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("summary")
                        .HasComment("简介");

                    b.Property<bool>("isdeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("tenant_id")
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.HasKey("Id");

                    b.HasIndex("Create_User_Id")
                        .HasDatabaseName("Index_Group_Create_User_Id");

                    b.HasIndex("HandIcon_Id")
                        .HasDatabaseName("Index_Group_HandIcon_Id");

                    b.HasIndex("LordUser_Id")
                        .HasDatabaseName("Index_Group_LordUser_Id");

                    b.HasIndex("Modify_User_Id")
                        .HasDatabaseName("Index_Group_Modify_User_Id");

                    b.HasIndex("isdeleted")
                        .HasDatabaseName("Index_Group_isdeleted");

                    b.HasIndex("tenant_id")
                        .HasDatabaseName("Index_Group_tenant_id");

                    b.ToTable("chat_group");

                    b
                        .HasComment("群组");
                });

            modelBuilder.Entity("FastFrame.Entity.Chat.GroupManager", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("id")
                        .HasComment("主键");

                    b.Property<string>("Group_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("group_id")
                        .HasComment("群组");

                    b.Property<string>("User_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("user_id")
                        .HasComment("管理员");

                    b.HasKey("Id");

                    b.HasIndex("Group_Id")
                        .HasDatabaseName("Index_GroupManager_Group_Id");

                    b.HasIndex("User_Id")
                        .HasDatabaseName("Index_GroupManager_User_Id");

                    b.ToTable("chat_groupmanager");

                    b
                        .HasComment("群组管理员");
                });

            modelBuilder.Entity("FastFrame.Entity.Chat.GroupMessage", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("id")
                        .HasComment("主键");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("category")
                        .HasComment("消息类型");

                    b.Property<string>("Content")
                        .HasMaxLength(500)
                        .IsUnicode(true)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("content")
                        .HasComment("内容");

                    b.Property<string>("From_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("from_id")
                        .HasComment("发送人");

                    b.Property<string>("Group_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("group_id")
                        .HasComment("群组ID");

                    b.Property<DateTime>("MessageTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("messagetime")
                        .HasComment("消息时间");

                    b.Property<string>("Resource_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("resource_id")
                        .HasComment("图片?附件ID");

                    b.Property<string>("tenant_id")
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.HasKey("Id");

                    b.HasIndex("From_Id")
                        .HasDatabaseName("Index_GroupMessage_From_Id");

                    b.HasIndex("Group_Id")
                        .HasDatabaseName("Index_GroupMessage_Group_Id");

                    b.HasIndex("Resource_Id")
                        .HasDatabaseName("Index_GroupMessage_Resource_Id");

                    b.HasIndex("tenant_id")
                        .HasDatabaseName("Index_GroupMessage_tenant_id");

                    b.ToTable("chat_groupmessage");

                    b
                        .HasComment("群组消息");
                });

            modelBuilder.Entity("FastFrame.Entity.Chat.MessageTarget", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("id")
                        .HasComment("主键");

                    b.Property<bool>("HaveRead")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("haveread")
                        .HasComment("已读");

                    b.Property<string>("Message_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("message_id")
                        .HasComment("消息ID");

                    b.Property<string>("To_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("to_id")
                        .HasComment("接收人");

                    b.HasKey("Id");

                    b.HasIndex("Message_Id")
                        .HasDatabaseName("Index_MessageTarget_Message_Id");

                    b.HasIndex("To_Id")
                        .HasDatabaseName("Index_MessageTarget_To_Id");

                    b.ToTable("chat_messagetarget");

                    b
                        .HasComment("消息接收人");
                });

            modelBuilder.Entity("FastFrame.Entity.Flow.FlowInstance", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("id")
                        .HasComment("");

                    b.Property<string>("BeModuleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("bemodulename")
                        .HasComment("归属模块");

                    b.Property<string>("BeModuleText")
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("bemoduletext")
                        .HasComment("单据名称");

                    b.Property<string>("BillNumber")
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("billnumber")
                        .HasComment("单据编号");

                    b.Property<string>("Bill_Id")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("bill_id")
                        .HasComment("单据ID");

                    b.Property<DateTime?>("CompleteTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("completetime")
                        .HasComment("完结时间");

                    b.Property<string>("CurrStep_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("currstep_id")
                        .HasComment("当前步骤");

                    b.Property<string>("Enabled")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("enabled")
                        .HasComment("状态");

                    b.Property<bool>("IsComlete")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("iscomlete")
                        .HasComment("是否已完结");

                    b.Property<DateTime?>("LastCheckTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("lastchecktime")
                        .HasComment("最后审批时间");

                    b.Property<string>("LastChecker_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("lastchecker_id")
                        .HasComment("最后审批人");

                    b.Property<string>("Sponsor_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("sponsor_id")
                        .HasComment("流程发起人");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("starttime")
                        .HasComment("发起时间");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status")
                        .HasComment("流程状态");

                    b.Property<int>("Version")
                        .HasColumnType("int")
                        .HasColumnName("version")
                        .HasComment("版本");

                    b.Property<string>("WorkFlow_Id")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("workflow_id")
                        .HasComment("关联流程");

                    b.Property<bool>("isdeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("tenant_id")
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.HasKey("Id");

                    b.HasIndex("Bill_Id")
                        .HasDatabaseName("Index_FlowInstance_Bill_Id");

                    b.HasIndex("CurrStep_Id")
                        .HasDatabaseName("Index_FlowInstance_CurrStep_Id");

                    b.HasIndex("LastChecker_Id")
                        .HasDatabaseName("Index_FlowInstance_LastChecker_Id");

                    b.HasIndex("Sponsor_Id")
                        .HasDatabaseName("Index_FlowInstance_Sponsor_Id");

                    b.HasIndex("WorkFlow_Id")
                        .HasDatabaseName("Index_FlowInstance_WorkFlow_Id");

                    b.HasIndex("isdeleted")
                        .HasDatabaseName("Index_FlowInstance_isdeleted");

                    b.HasIndex("tenant_id")
                        .HasDatabaseName("Index_FlowInstance_tenant_id");

                    b.ToTable("flow_flowinstance");

                    b
                        .HasComment("流程实例");
                });

            modelBuilder.Entity("FastFrame.Entity.Flow.FlowInstanceDept", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("id")
                        .HasComment("");

                    b.Property<string>("BeDept_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("bedept_id")
                        .HasComment("归属部门");

                    b.Property<string>("FlowInstance_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("flowinstance_id")
                        .HasComment("关联：FlowInstance");

                    b.Property<bool>("isdeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("tenant_id")
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.HasKey("Id");

                    b.HasIndex("BeDept_Id")
                        .HasDatabaseName("Index_FlowInstanceDept_BeDept_Id");

                    b.HasIndex("FlowInstance_Id")
                        .HasDatabaseName("Index_FlowInstanceDept_FlowInstance_Id");

                    b.HasIndex("isdeleted")
                        .HasDatabaseName("Index_FlowInstanceDept_isdeleted");

                    b.HasIndex("tenant_id")
                        .HasDatabaseName("Index_FlowInstanceDept_tenant_id");

                    b.ToTable("flow_flowinstancedept");

                    b
                        .HasComment("流程实例归属科室");
                });

            modelBuilder.Entity("FastFrame.Entity.Flow.FlowLine", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("id")
                        .HasComment("");

                    b.Property<int>("From")
                        .HasColumnType("int")
                        .HasColumnName("from")
                        .HasComment("从");

                    b.Property<string>("Text")
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("text")
                        .HasComment("名称");

                    b.Property<int>("To")
                        .HasColumnType("int")
                        .HasColumnName("to")
                        .HasComment("到");

                    b.Property<decimal>("Weights")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("weights")
                        .HasComment("权重");

                    b.Property<string>("WorkFlow_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("workflow_id")
                        .HasComment("关联:WorkFlow");

                    b.Property<bool>("isdeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("tenant_id")
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.HasKey("Id");

                    b.HasIndex("WorkFlow_Id")
                        .HasDatabaseName("Index_FlowLine_WorkFlow_Id");

                    b.HasIndex("isdeleted")
                        .HasDatabaseName("Index_FlowLine_isdeleted");

                    b.HasIndex("tenant_id")
                        .HasDatabaseName("Index_FlowLine_tenant_id");

                    b.ToTable("flow_flowline");

                    b
                        .HasComment("流程连接线");
                });

            modelBuilder.Entity("FastFrame.Entity.Flow.FlowLineCond", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("id")
                        .HasComment("");

                    b.Property<string>("Compare")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(true)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("compare")
                        .HasComment("比较方式");

                    b.Property<string>("FieldName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("fieldname")
                        .HasComment("字段名");

                    b.Property<string>("FieldText")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("fieldtext")
                        .HasComment("字段文本");

                    b.Property<string>("FieldValue")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("fieldvalue")
                        .HasComment("值");

                    b.Property<string>("FieldValueText")
                        .HasMaxLength(500)
                        .IsUnicode(true)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("fieldvaluetext")
                        .HasComment("值文本");

                    b.Property<string>("FlowLink_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("flowlink_id")
                        .HasComment("关联:FlowLink");

                    b.HasKey("Id");

                    b.HasIndex("FlowLink_Id")
                        .HasDatabaseName("Index_FlowLineCond_FlowLink_Id");

                    b.ToTable("flow_flowlinecond");

                    b
                        .HasComment("流程线条件");
                });

            modelBuilder.Entity("FastFrame.Entity.Flow.FlowNode", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("id")
                        .HasComment("");

                    b.Property<bool>("DeptCheck")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("deptcheck")
                        .HasComment("主管审核");

                    b.Property<int>("Key")
                        .HasColumnType("int")
                        .HasColumnName("key")
                        .HasComment("节点键");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name")
                        .HasComment("名称");

                    b.Property<bool>("TriggerAppNotify")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("triggerappnotify")
                        .HasComment("触发应用通知");

                    b.Property<bool>("TriggerSmsNotify")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("triggersmsnotify")
                        .HasComment("触发短信通知");

                    b.Property<bool>("TriggerWxNotify")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("triggerwxnotify")
                        .HasComment("触发微信通知");

                    b.Property<string>("WorkFlow_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("workflow_id")
                        .HasComment("关联:WorkFlow");

                    b.Property<bool>("isdeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("tenant_id")
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.HasKey("Id");

                    b.HasIndex("WorkFlow_Id")
                        .HasDatabaseName("Index_FlowNode_WorkFlow_Id");

                    b.HasIndex("isdeleted")
                        .HasDatabaseName("Index_FlowNode_isdeleted");

                    b.HasIndex("tenant_id")
                        .HasDatabaseName("Index_FlowNode_tenant_id");

                    b.ToTable("flow_flownode");

                    b
                        .HasComment("流程节点");
                });

            modelBuilder.Entity("FastFrame.Entity.Flow.FlowNodeField", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("id")
                        .HasComment("");

                    b.Property<string>("FieldName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("fieldname")
                        .HasComment("字段名称");

                    b.Property<string>("FlowNode_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("flownode_id")
                        .HasComment("关联:FlowNode");

                    b.Property<bool>("isdeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("tenant_id")
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.HasKey("Id");

                    b.HasIndex("FlowNode_Id")
                        .HasDatabaseName("Index_FlowNodeField_FlowNode_Id");

                    b.HasIndex("isdeleted")
                        .HasDatabaseName("Index_FlowNodeField_isdeleted");

                    b.HasIndex("tenant_id")
                        .HasDatabaseName("Index_FlowNodeField_tenant_id");

                    b.ToTable("flow_flownodefield");

                    b
                        .HasComment("节点动态审核人");
                });

            modelBuilder.Entity("FastFrame.Entity.Flow.FlowNodeRole", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("id")
                        .HasComment("");

                    b.Property<string>("FlowNode_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("flownode_id")
                        .HasComment("关联:FlowNode");

                    b.Property<string>("Role_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("role_id")
                        .HasComment("关联:Role");

                    b.Property<bool>("isdeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("tenant_id")
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.HasKey("Id");

                    b.HasIndex("FlowNode_Id")
                        .HasDatabaseName("Index_FlowNodeRole_FlowNode_Id");

                    b.HasIndex("Role_Id")
                        .HasDatabaseName("Index_FlowNodeRole_Role_Id");

                    b.HasIndex("isdeleted")
                        .HasDatabaseName("Index_FlowNodeRole_isdeleted");

                    b.HasIndex("tenant_id")
                        .HasDatabaseName("Index_FlowNodeRole_tenant_id");

                    b.ToTable("flow_flownoderole");

                    b
                        .HasComment("节点审核角色");
                });

            modelBuilder.Entity("FastFrame.Entity.Flow.FlowNodeUser", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("id")
                        .HasComment("");

                    b.Property<string>("FlowNode_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("flownode_id")
                        .HasComment("关联:FlowNode");

                    b.Property<string>("User_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("user_id")
                        .HasComment("关联:User");

                    b.Property<bool>("isdeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("tenant_id")
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.HasKey("Id");

                    b.HasIndex("FlowNode_Id")
                        .HasDatabaseName("Index_FlowNodeUser_FlowNode_Id");

                    b.HasIndex("User_Id")
                        .HasDatabaseName("Index_FlowNodeUser_User_Id");

                    b.HasIndex("isdeleted")
                        .HasDatabaseName("Index_FlowNodeUser_isdeleted");

                    b.HasIndex("tenant_id")
                        .HasDatabaseName("Index_FlowNodeUser_tenant_id");

                    b.ToTable("flow_flownodeuser");

                    b
                        .HasComment("节点审核人");
                });

            modelBuilder.Entity("FastFrame.Entity.Flow.FlowProcess", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("id")
                        .HasComment("");

                    b.Property<string>("Action")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("action")
                        .HasComment("动作");

                    b.Property<string>("Desc")
                        .HasMaxLength(500)
                        .IsUnicode(true)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("desc")
                        .HasComment("描述");

                    b.Property<string>("FlowInstance_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("flowinstance_id")
                        .HasComment("关联：FlowInstance");

                    b.Property<string>("FlowStepName")
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("flowstepname")
                        .HasComment("步骤名称");

                    b.Property<string>("FlowStep_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("flowstep_id")
                        .HasComment("关联：FlowStep");

                    b.Property<int>("NodeKey")
                        .HasColumnType("int")
                        .HasColumnName("nodekey")
                        .HasComment("节点key");

                    b.Property<DateTime>("OperateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("operatetime")
                        .HasComment("时间");

                    b.Property<string>("OperaterName")
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("operatername")
                        .HasComment("操作人名称");

                    b.Property<string>("Operater_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("operater_id")
                        .HasComment("操作人");

                    b.Property<bool>("isdeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("tenant_id")
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.HasKey("Id");

                    b.HasIndex("FlowInstance_Id")
                        .HasDatabaseName("Index_FlowProcess_FlowInstance_Id");

                    b.HasIndex("FlowStep_Id")
                        .HasDatabaseName("Index_FlowProcess_FlowStep_Id");

                    b.HasIndex("Operater_Id")
                        .HasDatabaseName("Index_FlowProcess_Operater_Id");

                    b.HasIndex("isdeleted")
                        .HasDatabaseName("Index_FlowProcess_isdeleted");

                    b.HasIndex("tenant_id")
                        .HasDatabaseName("Index_FlowProcess_tenant_id");

                    b.ToTable("flow_flowprocess");

                    b
                        .HasComment("审批过程");
                });

            modelBuilder.Entity("FastFrame.Entity.Flow.FlowSnapshot", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("id")
                        .HasComment("");

                    b.Property<string>("FKey_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("fkey_id")
                        .HasComment("外键：流程ID，或者单据ID");

                    b.Property<string>("FlowInstance_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("flowinstance_id")
                        .HasComment("关联：FlowInstance");

                    b.Property<string>("SnapshotContent")
                        .IsUnicode(true)
                        .HasColumnType("longtext")
                        .HasColumnName("snapshotcontent")
                        .HasComment("快照内容");

                    b.Property<bool>("isdeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("tenant_id")
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.HasKey("Id");

                    b.HasIndex("FKey_Id")
                        .HasDatabaseName("Index_FlowSnapshot_FKey_Id");

                    b.HasIndex("FlowInstance_Id")
                        .HasDatabaseName("Index_FlowSnapshot_FlowInstance_Id");

                    b.HasIndex("isdeleted")
                        .HasDatabaseName("Index_FlowSnapshot_isdeleted");

                    b.HasIndex("tenant_id")
                        .HasDatabaseName("Index_FlowSnapshot_tenant_id");

                    b.ToTable("flow_flowsnapshot");

                    b
                        .HasComment("流程快照");
                });

            modelBuilder.Entity("FastFrame.Entity.Flow.FlowStep", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("id")
                        .HasComment("");

                    b.Property<string>("FlowInstance_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("flowinstance_id")
                        .HasComment("关联：FlowInstance");

                    b.Property<int>("FlowNodeKey")
                        .HasColumnType("int")
                        .HasColumnName("flownodekey")
                        .HasComment("节点键");

                    b.Property<string>("FlowNode_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("flownode_id")
                        .HasComment("关联：FlowNode");

                    b.Property<int>("NextStepKey")
                        .HasColumnType("int")
                        .HasColumnName("nextstepkey")
                        .HasComment("下一步节点键");

                    b.Property<string>("NextStep_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("nextstep_id")
                        .HasComment("关联：FlowStep，下一步");

                    b.Property<int>("PrevStepKey")
                        .HasColumnType("int")
                        .HasColumnName("prevstepkey")
                        .HasComment("上一步节点键");

                    b.Property<string>("PrevStep_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("prevstep_id")
                        .HasComment("关联：FlowStep，上一步");

                    b.Property<string>("StepName")
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("stepname")
                        .HasComment("步骤名称");

                    b.Property<int>("StepOrder")
                        .HasColumnType("int")
                        .HasColumnName("steporder")
                        .HasComment("步骤序号");

                    b.Property<bool>("isdeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("tenant_id")
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.HasKey("Id");

                    b.HasIndex("FlowInstance_Id")
                        .HasDatabaseName("Index_FlowStep_FlowInstance_Id");

                    b.HasIndex("FlowNode_Id")
                        .HasDatabaseName("Index_FlowStep_FlowNode_Id");

                    b.HasIndex("NextStep_Id")
                        .HasDatabaseName("Index_FlowStep_NextStep_Id");

                    b.HasIndex("PrevStep_Id")
                        .HasDatabaseName("Index_FlowStep_PrevStep_Id");

                    b.HasIndex("isdeleted")
                        .HasDatabaseName("Index_FlowStep_isdeleted");

                    b.HasIndex("tenant_id")
                        .HasDatabaseName("Index_FlowStep_tenant_id");

                    b.ToTable("flow_flowstep");

                    b
                        .HasComment("流程步骤");
                });

            modelBuilder.Entity("FastFrame.Entity.Flow.FlowStepUser", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("id")
                        .HasComment("");

                    b.Property<string>("BeDept_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("bedept_id")
                        .HasComment("归属科室");

                    b.Property<string>("BeRole_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("berole_id")
                        .HasComment("归属角色");

                    b.Property<string>("FlowInstance_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("flowinstance_id")
                        .HasComment("关联：FlowInstance");

                    b.Property<string>("FlowStep_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("flowstep_id")
                        .HasComment("关联：FlowStep");

                    b.Property<string>("User_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("user_id")
                        .HasComment("关联：User");

                    b.Property<bool>("isdeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("tenant_id")
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.HasKey("Id");

                    b.HasIndex("BeDept_Id")
                        .HasDatabaseName("Index_FlowStepUser_BeDept_Id");

                    b.HasIndex("BeRole_Id")
                        .HasDatabaseName("Index_FlowStepUser_BeRole_Id");

                    b.HasIndex("FlowInstance_Id")
                        .HasDatabaseName("Index_FlowStepUser_FlowInstance_Id");

                    b.HasIndex("FlowStep_Id")
                        .HasDatabaseName("Index_FlowStepUser_FlowStep_Id");

                    b.HasIndex("User_Id")
                        .HasDatabaseName("Index_FlowStepUser_User_Id");

                    b.HasIndex("isdeleted")
                        .HasDatabaseName("Index_FlowStepUser_isdeleted");

                    b.HasIndex("tenant_id")
                        .HasDatabaseName("Index_FlowStepUser_tenant_id");

                    b.ToTable("flow_flowstepuser");

                    b
                        .HasComment("流程步骤审核人");
                });

            modelBuilder.Entity("FastFrame.Entity.Flow.WorkFlow", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("id")
                        .HasComment("主键");

                    b.Property<string>("BeModule")
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("bemodule")
                        .HasComment("适用模块");

                    b.Property<string>("BeModuleName")
                        .HasMaxLength(150)
                        .IsUnicode(true)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("bemodulename")
                        .HasComment("模块名称");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("createtime")
                        .HasComment("创建时间");

                    b.Property<string>("Create_User_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("create_user_id")
                        .HasComment("创建人");

                    b.Property<string>("Enabled")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("enabled")
                        .HasComment("状态");

                    b.Property<DateTime>("ModifyTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("modifytime")
                        .HasComment("修改时间");

                    b.Property<string>("Modify_User_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("modify_user_id")
                        .HasComment("修改人");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name")
                        .HasComment("名称");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .IsUnicode(true)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("remarks")
                        .HasComment("备注");

                    b.Property<int>("Version")
                        .HasColumnType("int")
                        .HasColumnName("version")
                        .HasComment("版本");

                    b.Property<bool>("isdeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("tenant_id")
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.HasKey("Id");

                    b.HasIndex("Create_User_Id")
                        .HasDatabaseName("Index_WorkFlow_Create_User_Id");

                    b.HasIndex("Modify_User_Id")
                        .HasDatabaseName("Index_WorkFlow_Modify_User_Id");

                    b.HasIndex("isdeleted")
                        .HasDatabaseName("Index_WorkFlow_isdeleted");

                    b.HasIndex("tenant_id")
                        .HasDatabaseName("Index_WorkFlow_tenant_id");

                    b.ToTable("flow_workflow");

                    b
                        .HasComment("工作流");
                });

            modelBuilder.Entity("FastFrame.Entity.OA.OaLeave", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("id")
                        .HasComment("主键");

                    b.Property<string>("Agent_Id")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("agent_id")
                        .HasComment("工作代理人");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("createtime")
                        .HasComment("申请时间");

                    b.Property<string>("Create_User_Id")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("create_user_id")
                        .HasComment("申请人");

                    b.Property<decimal?>("Days")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("days")
                        .HasComment("请假天数");

                    b.Property<string>("Dept_Id")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("dept_id")
                        .HasComment("部门");

                    b.Property<DateTime?>("EndTime")
                        .IsRequired()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("endtime")
                        .HasComment("结束时间");

                    b.Property<string>("FlowStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("flowstatus")
                        .HasComment("审批状态");

                    b.Property<string>("Job_Id")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("job_id")
                        .HasComment("岗位");

                    b.Property<string>("LeaveCategory")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("leavecategory")
                        .HasComment("请假类型");

                    b.Property<DateTime>("ModifyTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("modifytime")
                        .HasComment("修改时间");

                    b.Property<string>("Modify_User_Id")
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("modify_user_id")
                        .HasComment("修改人");

                    b.Property<string>("Number")
                        .HasMaxLength(20)
                        .IsUnicode(true)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("number")
                        .HasComment("请假单号");

                    b.Property<string>("Reasons")
                        .HasMaxLength(500)
                        .IsUnicode(true)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("reasons")
                        .HasComment("申请事由");

                    b.Property<DateTime?>("StartTime")
                        .IsRequired()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("starttime")
                        .HasComment("开始时间");

                    b.Property<bool>("isdeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("tenant_id")
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.HasKey("Id");

                    b.HasIndex("Agent_Id")
                        .HasDatabaseName("Index_OaLeave_Agent_Id");

                    b.HasIndex("Create_User_Id")
                        .HasDatabaseName("Index_OaLeave_Create_User_Id");

                    b.HasIndex("Dept_Id")
                        .HasDatabaseName("Index_OaLeave_Dept_Id");

                    b.HasIndex("Job_Id")
                        .HasDatabaseName("Index_OaLeave_Job_Id");

                    b.HasIndex("Modify_User_Id")
                        .HasDatabaseName("Index_OaLeave_Modify_User_Id");

                    b.HasIndex("isdeleted")
                        .HasDatabaseName("Index_OaLeave_isdeleted");

                    b.HasIndex("tenant_id")
                        .HasDatabaseName("Index_OaLeave_tenant_id");

                    b.ToTable("oa_oaleave");

                    b
                        .HasComment("请假单");
                });
#pragma warning restore 612, 618
        }
    }
}
