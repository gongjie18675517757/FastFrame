<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FastFrame.Infrastructure</name>
    </assembly>
    <members>
        <member name="T:FastFrame.Infrastructure.Attrs.EnumItemAttribute">
            <summary>
            数据字典
            </summary>
        </member>
        <member name="P:FastFrame.Infrastructure.Attrs.EnumItemAttribute.Name">
            <summary>
            字典值
            </summary>
        </member>
        <member name="P:FastFrame.Infrastructure.Attrs.EnumItemAttribute.SuperPropName">
            <summary>
            上级
            </summary>
        </member>
        <member name="T:FastFrame.Infrastructure.Attrs.ExcludeAttribute">
            <summary>
            排除标识[不生成DTO]
            </summary>
        </member>
        <member name="T:FastFrame.Infrastructure.Attrs.ExportAttribute">
            <summary>
            标记导出
            </summary>
        </member>
        <member name="P:FastFrame.Infrastructure.Attrs.ExportAttribute.ExportMarks">
            <summary>
            导出标记
            </summary>
        </member>
        <member name="T:FastFrame.Infrastructure.Attrs.ExportMark">
            <summary>
            导出标记
            </summary>
        </member>
        <member name="T:FastFrame.Infrastructure.Attrs.FormGroupAttribute">
            <summary>
            表单分组
            </summary>
        </member>
        <member name="M:FastFrame.Infrastructure.Attrs.FormGroupAttribute.#ctor(System.String[])">
            <summary>
            
            </summary>
            <param name="groupNames">归属分组名称</param>
        </member>
        <member name="T:FastFrame.Infrastructure.Attrs.PermissionAttribute">
            <summary>
            权限描述
            </summary>
        </member>
        <member name="P:FastFrame.Infrastructure.Attrs.PermissionAttribute.EnCode">
            <summary>
            权限名称
            </summary>
        </member>
        <member name="P:FastFrame.Infrastructure.Attrs.PermissionAttribute.Name">
            <summary>
            权限描述
            </summary>
        </member>
        <member name="P:FastFrame.Infrastructure.Attrs.PermissionAttribute.AnOtherEnCodes">
            <summary>
            别名
            </summary>
        </member>
        <member name="T:FastFrame.Infrastructure.Attrs.ReadOnlyAttribute">
            <summary>
            标记只读
            </summary>
        </member>
        <member name="P:FastFrame.Infrastructure.Attrs.ReadOnlyAttribute.ReadOnlyMark">
            <summary>
            只读类型
            </summary>
        </member>
        <member name="T:FastFrame.Infrastructure.Attrs.ReadOnlyMark">
            <summary>
            只读标识 
            </summary>
        </member>
        <member name="T:FastFrame.Infrastructure.Attrs.RelatedFromAttribute">
            <summary>
            关联自
            </summary>
        </member>
        <member name="P:FastFrame.Infrastructure.Attrs.RelatedFromAttribute.FromPropName">
            <summary>
            来源属性名
            </summary>
        </member>
        <member name="P:FastFrame.Infrastructure.Attrs.RelatedFromAttribute.RelatedFromPropName">
            <summary>
            关联属性名
            </summary>
        </member>
        <member name="P:FastFrame.Infrastructure.Attrs.RelatedFromAttribute.IsDefault">
            <summary>
            是否默认字段
            </summary>
        </member>
        <member name="T:FastFrame.Infrastructure.Attrs.RelatedToAttribute">
            <summary>
            关联标记
            </summary>
        </member>
        <member name="P:FastFrame.Infrastructure.Attrs.RelatedToAttribute.RelatedType">
            <summary>
            被关联的类型
            </summary>
        </member>
        <member name="P:FastFrame.Infrastructure.Attrs.RelatedToAttribute.FullProps">
            <summary>
            是否全属性
            </summary>
        </member>
        <member name="T:FastFrame.Infrastructure.Attrs.TreeAttribute">
            <summary>
            标记是树形结构
            </summary>
        </member>
        <member name="P:FastFrame.Infrastructure.Attrs.TreeAttribute.Key">
            <summary>
            关键属性
            </summary>
        </member>
        <member name="T:FastFrame.Infrastructure.Attrs.UniqueAttribute">
            <summary>
            唯一标识
            </summary>
        </member>
        <member name="M:FastFrame.Infrastructure.Attrs.UniqueAttribute.#ctor(System.String[])">
            <summary>
            
            </summary>
            <param name="uniqueNames">需要验证唯一的属性</param>
        </member>
        <member name="T:FastFrame.Infrastructure.Attrs.UniqueException">
            <summary>
            数据重复异常
            </summary>
        </member>
        <member name="P:FastFrame.Infrastructure.Attrs.UniqueException.Type">
            <summary>
            类型
            </summary>
        </member>
        <member name="P:FastFrame.Infrastructure.Attrs.UniqueException.PropNames">
            <summary>
            重复的字段名称
            </summary>
        </member>
        <member name="T:FastFrame.Infrastructure.ComparisonCollection`2">
            <summary>
            比较集合,返回差异
            </summary>
            <typeparam name="TBefore"></typeparam>
            <typeparam name="TAfter"></typeparam>
        </member>
        <member name="M:FastFrame.Infrastructure.ComparisonCollection`2.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEnumerable{`1},System.Func{`0,`1,System.Boolean})">
            <summary>
            
            </summary>
            <param name="befores">修改前</param>
            <param name="afters">修改后</param>
            <param name="compare">比较表达式</param>
        </member>
        <member name="M:FastFrame.Infrastructure.ComparisonCollection`2.GetCollectionByAdded">
            <summary>
            返回标识为新增的内容
            </summary>
            <returns></returns>
        </member>
        <member name="M:FastFrame.Infrastructure.ComparisonCollection`2.GetCollectionByDeleted">
            <summary>
            返回标识为删除的内容
            </summary>
            <returns></returns>
        </member>
        <member name="M:FastFrame.Infrastructure.ComparisonCollection`2.GetCollectionByModify">
            <summary>
            返回标识为修改的内容 
            </summary>
            <returns></returns>
        </member>
        <member name="M:FastFrame.Infrastructure.DescriptionHelp.GetDescription(System.Type,System.String)">
            <summary>
            返回类型的注释说明
            </summary>　
        </member>
        <member name="M:FastFrame.Infrastructure.DescriptionHelp.GetPropSummary(System.Type,System.Reflection.PropertyInfo,System.String)">
            <summary>
            获取属性的说明 
            </summary>　　
        </member>
        <member name="M:FastFrame.Infrastructure.DescriptionHelp.GetEnumSummary(System.Type,System.String,System.String)">
            <summary>
            获取枚举的说明
            </summary>
            <param name="enumType"></param>
            <param name="enumValue"></param>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="T:FastFrame.Infrastructure.EventBus.BaseEventData`1">
            <summary>
            实体变化事件数据
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:FastFrame.Infrastructure.EventBus.IEventBus">
            <summary>
            事件总线
            </summary>
        </member>
        <member name="M:FastFrame.Infrastructure.EventBus.IEventBus.TriggerAsync``1(``0)">
            <summary>
            触发事件
            </summary> 
        </member>
        <member name="T:FastFrame.Infrastructure.EventBus.IEventData`1">
            <summary>
            事件数据
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:FastFrame.Infrastructure.EventBus.IEventHandle`1">
            <summary>
            事件处理
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:FastFrame.Infrastructure.EventBus.IEventHandle`1.HandleEventAsync(`0)">
            <summary>
            处理方法
            </summary>
            <param name="event"></param>
            <returns></returns>
        </member>
        <member name="T:FastFrame.Infrastructure.EventBus.IEventHandleService">
            <summary>
            事件处理服务
            </summary>
        </member>
        <member name="T:FastFrame.Infrastructure.ExpressionExtended">
            <summary>
            表达式扩展
            </summary>
        </member>
        <member name="T:FastFrame.Infrastructure.ExpressionExtended`1">
            <summary>
            表达式扩展
            </summary> 
        </member>
        <member name="T:FastFrame.Infrastructure.ExpressionExtended`2">
            <summary>
            表达式扩展
            </summary>
            <typeparam name="TSource">源类型</typeparam>
            <typeparam name="TTarget">目录类型</typeparam>
        </member>
        <member name="M:FastFrame.Infrastructure.ExpressionExtended`2.GetMapSetExpression">
            <summary>
            生成表达式树[将source对象的属性,写到target对象的对应属性上]
            </summary>
            <returns></returns>
        </member>
        <member name="M:FastFrame.Infrastructure.ExpressionExtended`2.GetMapSetDelegate">
            <summary>
            生成委托[将source对象的属性,写到target对象的对应属性上]
            </summary>
            <returns></returns>
        </member>
        <member name="M:FastFrame.Infrastructure.ExpressionExtended`2.MapSet(`0,`1)">
            <summary>
            将source对象的属性,写到target对象的对应属性上
            </summary>
            <param name="source">源对象</param>
            <param name="target">目录对象</param>
        </member>
        <member name="M:FastFrame.Infrastructure.ExpressionExtended`2.GetMapToExpression">
            <summary>
            生成表达式树[生成target类型的target对象,并将source对象的属性填充到target对象上]
            </summary>
            <returns></returns>
        </member>
        <member name="M:FastFrame.Infrastructure.ExpressionExtended`2.GetMapToDelegate">
            <summary>
            生成委托:[ 生成target类型的target对象,并将source对象的属性填充到target对象上]
            </summary>
            <returns></returns>
        </member>
        <member name="M:FastFrame.Infrastructure.ExpressionExtended`2.MapTo(`0)">
            <summary>
             生成target类型的target对象,并将source对象的属性填充到target对象上
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:FastFrame.Infrastructure.Extension.IsNullOrWhiteSpace(System.String)">
            <summary>
            判空
            </summary>
            <param name="in"></param>
            <returns></returns>
        </member>
        <member name="M:FastFrame.Infrastructure.Extension.ToBase64(System.String)">
            <summary>
            ToBase64
            </summary>
            <param name="in"></param>
            <returns></returns>
        </member>
        <member name="M:FastFrame.Infrastructure.Extension.ToMD5(System.String)">
            <summary>
            ToMD5
            </summary>
            <param name="in"></param>
            <returns></returns>
        </member>
        <member name="M:FastFrame.Infrastructure.Extension.GetValue(System.Object,System.String)">
            <summary>
            获取对象值
            </summary>
            <param name="in"></param>
            <param name="propName"></param>
            <returns></returns>
        </member>
        <member name="M:FastFrame.Infrastructure.Extension.MapTo``2(System.Linq.IQueryable{``0})">
            <summary>
            属性映射
            </summary>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TTarget"></typeparam>
            <param name="sources"></param>
            <returns></returns>
        </member>
        <member name="M:FastFrame.Infrastructure.Extension.MapTo``2(``0)">
            <summary>
            属性映射
            </summary>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TTarget"></typeparam>
            <param name="sources"></param>
            <returns></returns>
        </member>
        <member name="M:FastFrame.Infrastructure.Extension.MapSet``2(``0,``1)">
            <summary>
            属性映射
            </summary>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TTarget"></typeparam>
            <param name="source"></param>
            <param name="target"></param>
        </member>
        <member name="M:FastFrame.Infrastructure.Extension.ToJson(System.Object)">
            <summary>
            序列化
            </summary>
            <param name="in"></param>
            <returns></returns>
        </member>
        <member name="M:FastFrame.Infrastructure.Extension.ToJObject(System.String)">
            <summary>
            反序列化
            </summary>
            <param name="in"></param>
            <returns></returns>
        </member>
        <member name="M:FastFrame.Infrastructure.Extension.ToObject``1(System.String)">
            <summary>
            反序列化
            </summary>
            <typeparam name="T"></typeparam>
            <param name="in"></param>
            <returns></returns>
        </member>
        <member name="T:FastFrame.Infrastructure.Interface.ICurrentUserProvider">
            <summary>
            当前用户提供者
            </summary>
        </member>
        <member name="M:FastFrame.Infrastructure.Interface.ICurrentUserProvider.GetCurrUser">
            <summary>
            获取当前用户
            </summary>
            <returns></returns>
        </member>
        <member name="M:FastFrame.Infrastructure.Interface.ICurrentUserProvider.GetCurrOrganizeId">
            <summary>
            获取当前组织ID
            </summary>
            <returns></returns>
        </member>
        <member name="M:FastFrame.Infrastructure.Interface.ICurrentUserProvider.Login(FastFrame.Infrastructure.Interface.ICurrUser)">
            <summary>
            登陆
            </summary>
            <param name="currUser"></param>
            <returns></returns>
        </member>
        <member name="M:FastFrame.Infrastructure.Interface.ICurrentUserProvider.LogOut">
            <summary>
            登出
            </summary> 
        </member>
        <member name="T:FastFrame.Infrastructure.Interface.ICurrUser">
            <summary>
            当前用户
            </summary>
        </member>
        <member name="P:FastFrame.Infrastructure.Interface.ICurrUser.ToKen">
            <summary>
            当前ToKen的ID
            </summary>
        </member>
        <member name="P:FastFrame.Infrastructure.Interface.ICurrUser.Id">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="P:FastFrame.Infrastructure.Interface.ICurrUser.Name">
            <summary>
            用户名称
            </summary>
        </member>
        <member name="P:FastFrame.Infrastructure.Interface.ICurrUser.Account">
            <summary>
            帐号名
            </summary>
        </member>
        <member name="P:FastFrame.Infrastructure.Interface.ICurrUser.IsAdmin">
            <summary>
            是否管理员
            </summary>
        </member>
        <member name="P:FastFrame.Infrastructure.Interface.ICurrUser.IsRoot">
            <summary>
            是否超级用户
            </summary>
        </member>
        <member name="T:FastFrame.Infrastructure.Interface.IDescriptionProvider">
            <summary>
            类型/属性 说明提供
            </summary>
        </member>
        <member name="M:FastFrame.Infrastructure.Interface.IDescriptionProvider.GetClassDescription(System.Type)">
            <summary>
            获取类说明
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:FastFrame.Infrastructure.Interface.IDescriptionProvider.GetPropertyDescription(System.Reflection.PropertyInfo)">
            <summary>
            获取属性说明
            </summary>
            <param name="property"></param>
            <returns></returns>
        </member>
        <member name="M:FastFrame.Infrastructure.Interface.IDescriptionProvider.GetPropertyDescription(System.Type,System.String)">
            <summary>
            获取属性说明
            </summary>
            <param name="type"></param>
            <param name="propName"></param>
            <returns></returns>
        </member>
        <member name="M:FastFrame.Infrastructure.Interface.IDescriptionProvider.GetEnumSummary(System.Type,System.String)">
            <summary>
            获取枚举说明
            </summary>
            <param name="enumType"></param>
            <param name="enumValue"></param>
            <returns></returns>
        </member>
        <member name="T:FastFrame.Infrastructure.Interface.IResourceProvider">
            <summary>
            资源操作提供者
            </summary>
        </member>
        <member name="M:FastFrame.Infrastructure.Interface.IResourceProvider.SetResource(System.IO.Stream)">
            <summary>
            保存资源
            </summary>
            <param name="stream"></param>
            <returns></returns>
        </member>
        <member name="M:FastFrame.Infrastructure.Interface.IResourceProvider.GetResource(System.String)">
            <summary>
            打开资源
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:FastFrame.Infrastructure.Interface.IResourceProvider.GetFilePath(System.String)">
            <summary>
            获取实际文件路径
            </summary>
            <param name="relativelyPath"></param>
            <returns></returns>
        </member>
        <member name="T:FastFrame.Infrastructure.Interface.IScopeServiceLoader">
            <summary>
            服务加载器[IServiceProvider]
            </summary>
        </member>
        <member name="T:FastFrame.Infrastructure.MessageBus.IAsyncMessageHandle`1">
            <summary>
            处理异步消息
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:FastFrame.Infrastructure.MessageBus.IAsyncMessageHandle">
            <summary>
            处理异步消息
            </summary>
        </member>
        <member name="T:FastFrame.Infrastructure.MessageBus.IClientManage">
            <summary>
            客户端连接管理
            </summary>
        </member>
        <member name="T:FastFrame.Infrastructure.MessageBus.IMessageBus">
            <summary>
            消息总线
            </summary>
        </member>
        <member name="M:FastFrame.Infrastructure.MessageBus.IMessageBus.PubLishAsync``1(FastFrame.Infrastructure.MessageBus.Message{``0})">
            <summary>
             发布消息
            </summary>      
        </member>
        <member name="M:FastFrame.Infrastructure.MessageBus.IMessageBus.SubscribeAsync``1">
            <summary>
            订阅消息
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:FastFrame.Infrastructure.MessageBus.IMessageBus.SubscribeAsync(System.Type)">
            <summary>
             订阅消息
            </summary>
            <param name="msgType"></param>
        </member>
        <member name="T:FastFrame.Infrastructure.MessageBus.Message`1">
            <summary>
            消息体
            </summary>
        </member>
        <member name="P:FastFrame.Infrastructure.MessageBus.Message`1.Category">
            <summary>
            类型
            </summary>
        </member>
        <member name="P:FastFrame.Infrastructure.MessageBus.Message`1.Target_Ids">
            <summary>
            目标用户
            </summary>
        </member>
        <member name="P:FastFrame.Infrastructure.MessageBus.Message`1.Content">
            <summary>
            内容
            </summary>
        </member>
        <member name="T:FastFrame.Infrastructure.MessageBus.MessageBus">
            <summary>
            消息总线
            </summary>
        </member>
        <member name="T:FastFrame.Infrastructure.MessageBus.MsgType">
            <summary>
            消息类型
            </summary>
        </member>
        <member name="F:FastFrame.Infrastructure.MessageBus.MsgType.Notify">
            <summary>
            通知
            </summary>
        </member>
        <member name="F:FastFrame.Infrastructure.MessageBus.MsgType.FriendMsg">
            <summary>
            好友消息
            </summary>       
        </member>
        <member name="F:FastFrame.Infrastructure.MessageBus.MsgType.GroupMsg">
            <summary>
            群组消息
            </summary>
        </member>
        <member name="F:FastFrame.Infrastructure.MessageBus.MsgType.DataAdded">
            <summary>
            数据新增
            </summary>
        </member>
        <member name="F:FastFrame.Infrastructure.MessageBus.MsgType.DataUpdated">
            <summary>
            数据更新
            </summary>
        </member>
        <member name="F:FastFrame.Infrastructure.MessageBus.MsgType.DataDeleted">
            <summary>
            数据删除
            </summary>
        </member>
        <member name="T:FastFrame.Infrastructure.PageList`1">
            <summary>
            分页返回内容
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:FastFrame.Infrastructure.PageList`1.Total">
            <summary>
            返回查询到的总记录数量
            </summary> 
        </member>
        <member name="P:FastFrame.Infrastructure.PageList`1.Data">
            <summary>
            数据
            </summary>
        </member>
        <member name="T:FastFrame.Infrastructure.PagePara">
            <summary>
            查询列表参数
            </summary>
        </member>
        <member name="P:FastFrame.Infrastructure.PagePara.PageIndex">
            <summary>
            页码
            </summary>
        </member>
        <member name="P:FastFrame.Infrastructure.PagePara.PageSize">
            <summary>
            每页数量
            </summary>
        </member>
        <member name="P:FastFrame.Infrastructure.PagePara.Condition">
            <summary>
            查询条件
            </summary>
        </member>
        <member name="P:FastFrame.Infrastructure.PagePara.SortInfo">
            <summary>
            排序条件
            </summary>
        </member>
        <member name="P:FastFrame.Infrastructure.SortInfo.Name">
            <summary>
            排序列名称
            </summary>
        </member>
        <member name="P:FastFrame.Infrastructure.SortInfo.Mode">
            <summary>
            排序方式
            </summary>
        </member>
        <member name="P:FastFrame.Infrastructure.QueryCondition.KeyWord">
            <summary>
            模糊条件
            </summary>
        </member>
        <member name="P:FastFrame.Infrastructure.QueryCondition.Filters">
            <summary>
            条件
            </summary>
        </member>
        <member name="T:FastFrame.Infrastructure.Snowflake">
            <summary>
            动态生产有规律的ID
            </summary>
        </member>
        <member name="M:FastFrame.Infrastructure.Snowflake.GetTimestamp">
            <summary>
            生成当前时间戳
            </summary>
            <returns>毫秒</returns>
        </member>
        <member name="M:FastFrame.Infrastructure.Snowflake.GetNextTimestamp(System.Int64)">
            <summary>
            获取下一微秒时间戳
            </summary>
            <param name="lastTimestamp"></param>
            <returns></returns>
        </member>
        <member name="M:FastFrame.Infrastructure.Snowflake.GetId">
            <summary>
            获取长整形的ID
            </summary>
            <returns></returns>
        </member>
        <member name="M:FastFrame.Infrastructure.T4Help.GetClassTypes(System.Type)">
            <summary>
            返回所有实体
            </summary>
            <param name="baseType"></param>
            <returns></returns>
        </member>
        <member name="M:FastFrame.Infrastructure.T4Help.GetExportTypes(System.Type)">
            <summary>
            返回有标记导出的实体
            </summary>
            <param name="baseType"></param>
            <returns></returns>
        </member>
        <member name="M:FastFrame.Infrastructure.T4Help.GetTypeName(System.Type)">
            <summary>
            获取类型名称
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:FastFrame.Infrastructure.T4Help.GenerateNameSpace(System.Type,System.String)">
            <summary>
            生成命名空间
            </summary>
            <param name="type"></param>
            <param name="template"></param>
            <returns></returns>
        </member>
        <member name="M:FastFrame.Infrastructure.T4Help.GetClassSummary(System.Type,System.String)">
            <summary>
            获取类注释
            </summary>
            <param name="type"></param>
            <param name="basePath"></param>
            <returns></returns>
        </member>
        <member name="M:FastFrame.Infrastructure.T4Help.GetPropertySummary(System.Reflection.PropertyInfo,System.String)">
            <summary>
            返回属性注释
            </summary>
            <param name="property"></param>
            <param name="basePath"></param>
            <returns></returns>
        </member>
        <member name="T:FastFrame.Infrastructure.VerifyCodeExtended">
            <summary>
            生成验证码
            </summary>
        </member>
        <member name="M:FastFrame.Infrastructure.VerifyCodeExtended.CreateNumberVerifyCode(System.Int32)">
            <summary>
            1.数字验证码
            </summary>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:FastFrame.Infrastructure.VerifyCodeExtended.CreateAbcVerifyCode(System.Int32)">
            <summary>
            2.字母验证码
            </summary>
            <param name="length">字符长度</param>
            <returns>验证码字符</returns>
        </member>
        <member name="M:FastFrame.Infrastructure.VerifyCodeExtended.CreateMixVerifyCode(System.Int32)">
            <summary>
            3.混合验证码
            </summary>
            <param name="length">字符长度</param>
            <returns>验证码字符</returns>
        </member>
        <member name="M:FastFrame.Infrastructure.VerifyCodeExtended.CreateVerifyCode(FastFrame.Infrastructure.VerifyCodeExtended.VerifyCodeType,System.Int32)">
            <summary>
            产生验证码（随机产生4-6位）
            </summary> 
        </member>
        <member name="M:FastFrame.Infrastructure.VerifyCodeExtended.CreateBitmapByImgVerifyCode(System.String,System.Int32,System.Int32,System.Single)">
            <summary>
            验证码图片 => Bitmap
            </summary>  
        </member>
        <member name="M:FastFrame.Infrastructure.VerifyCodeExtended.CreateByteByImgVerifyCode(System.String,System.Int32,System.Int32)">
            <summary>
            验证码图片 => byte[]
            </summary>
            <param name="verifyCode">验证码</param>
            <param name="width">宽</param>
            <param name="height">高</param>
            <returns>byte[]</returns>
        </member>
    </members>
</doc>
